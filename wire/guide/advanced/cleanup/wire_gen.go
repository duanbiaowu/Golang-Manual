// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package cleanup

import (
	"github.com/google/wire"
	"os"
)

// Injectors from wire.go:

func InjectFooBar() (FooBar, func(), error) {
	foo := ProvideFoo()
	bar, cleanup, err := ProvideBar()
	if err != nil {
		return FooBar{}, nil, err
	}
	fooBar := FooBar{
		MyFoo: foo,
		MyBar: bar,
	}
	return fooBar, func() {
		cleanup()
	}, nil
}

func InjectFile(path string) (*os.File, func(), error) {
	file, cleanup, err := provideFile(path)
	if err != nil {
		return nil, nil, err
	}
	return file, func() {
		cleanup()
	}, nil
}

// wire.go:

var Set = wire.NewSet(ProvideFoo, ProvideBar, wire.Struct(new(FooBar), "*"))
